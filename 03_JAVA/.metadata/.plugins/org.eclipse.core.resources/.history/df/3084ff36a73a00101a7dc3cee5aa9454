package chap15.section02.example01;

import java.util.Optional;

/**
 * 옵셔널:null을 처리하는 다양한 메소드가 있는 클래스
 * 목적: null 코딩을 편리하게 하기위해 사용
 * 참고) 코딩시 null에러가 발생하면 어디서 잘못 코딩했는지 알기 힘듬
 *
 */
public class S1_OptionalApplication {
public static void main(String[] args) {
	Optional<String> optional=Optional.ofNullable(null);
//  null이 아닐때만 뭔가를 처리: 이렇게 코딩함.
//  이유: null 일때는 에러가 발생해서 프로그램이 종료됩니다.
//  사용법: 변수.isPresent() : 변수에 값이 있으면 true가 됩니다.
	
	if(optional.isPresent()) {
		System.out.println("값이 있음");
	}
	
//  2)좀더 편하게 처리하기 : 위의 if문과 기능 같음
//  람다식: x->System.out.println(x):메소드를 간단하게 표현하는 식
//  사용법: 변수.ifPresent(람다식);
//   해석=> 변수에 값이 있으면 람다식 실행됩니다.
	optional.ifPresent(x->System.out.println(x));
}
}
